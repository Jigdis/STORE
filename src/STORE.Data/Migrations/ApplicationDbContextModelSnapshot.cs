// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using STORE.Data.Context;

#nullable disable

namespace STORE.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("STORE.Entities.Models.Articulo", b =>
                {
                    b.Property<int>("ArticuloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticuloID"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ArticuloID");

                    b.ToTable("Articulo");
                });

            modelBuilder.Entity("STORE.Entities.Models.ArticuloTienda", b =>
                {
                    b.Property<int>("ArticuloTiendaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticuloTiendaID"));

                    b.Property<int>("ArticuloID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("TiendaID")
                        .HasColumnType("int");

                    b.HasKey("ArticuloTiendaID");

                    b.HasIndex("ArticuloID");

                    b.HasIndex("TiendaID");

                    b.ToTable("ArticuloTienda");
                });

            modelBuilder.Entity("STORE.Entities.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteID"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("ClienteID");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("STORE.Entities.Models.ClienteArticulo", b =>
                {
                    b.Property<int>("ClienteArticuloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteArticuloID"));

                    b.Property<int>("ArticuloID")
                        .HasColumnType("int");

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("ClienteArticuloID");

                    b.HasIndex("ArticuloID");

                    b.HasIndex("ClienteID");

                    b.ToTable("ClienteArticulo");
                });

            modelBuilder.Entity("STORE.Entities.Models.Tienda", b =>
                {
                    b.Property<int>("TiendaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TiendaID"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Sucursal")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("TiendaID");

                    b.ToTable("Tienda");
                });

            modelBuilder.Entity("STORE.Entities.Models.ArticuloTienda", b =>
                {
                    b.HasOne("STORE.Entities.Models.Articulo", "Articulo")
                        .WithMany("ArticulosTiendas")
                        .HasForeignKey("ArticuloID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("STORE.Entities.Models.Tienda", "Tienda")
                        .WithMany("ArticulosTiendas")
                        .HasForeignKey("TiendaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Tienda");
                });

            modelBuilder.Entity("STORE.Entities.Models.ClienteArticulo", b =>
                {
                    b.HasOne("STORE.Entities.Models.Articulo", "Articulo")
                        .WithMany("ClientesArticulos")
                        .HasForeignKey("ArticuloID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("STORE.Entities.Models.Cliente", "Cliente")
                        .WithMany("ClientesArticulos")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("STORE.Entities.Models.Articulo", b =>
                {
                    b.Navigation("ArticulosTiendas");

                    b.Navigation("ClientesArticulos");
                });

            modelBuilder.Entity("STORE.Entities.Models.Cliente", b =>
                {
                    b.Navigation("ClientesArticulos");
                });

            modelBuilder.Entity("STORE.Entities.Models.Tienda", b =>
                {
                    b.Navigation("ArticulosTiendas");
                });
#pragma warning restore 612, 618
        }
    }
}
